name: Integration Tests
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  integration-tests:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Compress the collector
      run: |
          tar czf diagnostic-collection.tar.gz ./*
    - name: Install dependencies
      run: |
          sudo apt-get update
          sudo apt-get install openjdk-8-jre -y
          wget -O tlp-cluster.deb https://bintray.com/thelastpickle/tlp-tools-deb/download_file?file_path=tlp-cluster_0.5_all.deb
          sudo dpkg -i tlp-cluster.deb
          mkdir -p /home/runner/.tlp-cluster/profiles/default

          sudo apt-get install     apt-transport-https     ca-certificates     curl     gnupg-agent     software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) \
            stable"
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io
          sudo usermod -aG docker ${USER}
    - name: Configure tlp-cluster
      if: ${{ success() }}
      env:
        TLP_CLUSTER_KEY: ${{ secrets.TLP_CLUSTER_KEY }}
        TLP_CLUSTER_SETTINGS: ${{ secrets.TLP_CLUSTER_SETTINGS }}
      run: |
          set -e
          if [[ -n "${TLP_CLUSTER_KEY}" ]];
          then
            printf "%s" "${TLP_CLUSTER_SETTINGS}" > /home/runner/.tlp-cluster/profiles/default/settings.yaml
            printf "%s" "${TLP_CLUSTER_KEY}" > /home/runner/.tlp-cluster/profiles/default/secret.pem
          fi

    - name: Spin up cluster
      if: ${{ success() }}
      run: |
          tlp-cluster init DS DSI-58 "Integration tests for the DS diagnostic toolkit"
          tlp-cluster up --auto-approve
          tlp-cluster use 3.11.7
          tlp-cluster install
          tlp-cluster start
#         success=0
#         attempts=1
#         while [ $success -eq  0 ] && [ $attempts -lt 5 ];
#         do
#             echo "Installing packages (attempt $attempts)"
#             tlp-cluster install > install.log 2>&1 || echo "meh... install phase seem to have failed"
#             grep "try rerunning the install" install.log > /dev/null 2>&1
#             success=$? # 0 means we found errors in the logs, so we need to try again
#             attempts=$((attempts+1))
#         done
#
#         if [ $success -eq  0 ]
#         then
#             echo "tlp-cluster install failed after $attempts retries. Exiting (╯°□°)╯︵ ┻━┻"
#             exit 1
#         fi
#
#         success=0
#         attempts=1
#         while [ $success -eq  0 ]  && [ $attempts -lt 5 ];
#         do
#             echo "Starting Cassandra (attempt $attempts)"
#             tlp-cluster start > start.log 2>&1 || echo "meh... start phase seem to have failed"
#             tail -3 start.log | grep "Non zero response returned" > /dev/null 2>&1
#             success=$?
#             attempts=$((attempts+1))
#         done
#
#         if [ $success -eq 0 ]
#         then
#             echo "tlp-cluster start failed after $attempts retries. Exiting (╯°□°)╯︵ ┻━┻"
#             exit 1
#         fi
    - name: Run diagnostics collection
      if: ${{ success() }}
      run: |
        source env.sh
        scp diagnostic-collection.tar.gz cassandra0:/home/ubuntu
        c0 "tar xvf diagnostic-collection.tar.gz && ./collect_diag.sh -t coss -r -m extended -u 900"
    - name: Tear down
      if: ${{ always() }}
      run: |
        tlp-cluster down --auto-approve
